# This workflow will build a Java project with Ant
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-ant

name: Java CI

on:
  push:
    tags:
     - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: 
      contents: write
      packages: write
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'zulu'
    - name: Build with Ant
      run: ant -noinput -buildfile build.xml
    - uses: actions/upload-artifact@v2
      with:
        name: Package
        path: /home/runner/work/jaas_relational_login/jaas_relational_login/target/JAAS_relational_login.jar
    - name: Create a Release
      uses: elgohr/Github-Release-Action@v4
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        title: Release ${{ github.ref_name }}
    - name: Upload Artifact
      id: upload_artifact
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: target/JAAS_relational_login.jar
        asset_name: JAAS_relational_login.jar
        asset_content_type: application/java-archive
    - name: Set maven version from tag
      run: mvn version:set -DnewVersion=${{ github.ref_name }}
    
    - name: Publish package
      run: |
        if [[ "$GITHUB_REF" = refs/heads/* ]]; then
            export VERSIONING_GIT_BRANCH=${GITHUB_REF#refs/heads/};
            exit 1
        elif [[ "$GITHUB_REF" = refs/tags/* ]]; then
            export VERSIONING_GIT_TAG=${GITHUB_REF#refs/tags/v};
            mvn versions:set -DgenerateBackupPoms=false -DnewVersion=$VERSIONING_GIT_TAG
        elif [[ "$GITHUB_REF" = refs/pull/*/merge ]]; then
            VERSIONING_GIT_BRANCH=${GITHUB_REF#refs/};
            export VERSIONING_GIT_BRANCH=${VERSIONING_GIT_BRANCH%/merge};
            exit 1
        fi
        mvn --batch-mode deploy
        git checkout pom.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
